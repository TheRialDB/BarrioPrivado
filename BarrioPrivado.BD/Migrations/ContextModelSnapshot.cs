// <auto-generated />
using BarrioPrivado.BD.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BarrioPrivado.BD.Migrations
{
    [DbContext(typeof(Context))]
    partial class ContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("BarrioPrivado.BD.Data.Entity.Domicilio", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("codigoDomicilio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("lote")
                        .IsRequired()
                        .HasMaxLength(1)
                        .HasColumnType("nvarchar(1)");

                    b.Property<string>("manzana")
                        .IsRequired()
                        .HasMaxLength(3)
                        .HasColumnType("nvarchar(3)");

                    b.HasKey("id");

                    b.ToTable("Domicilios");
                });

            modelBuilder.Entity("BarrioPrivado.BD.Data.Entity.Residente", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("DNI")
                        .HasColumnType("int");

                    b.Property<int>("Domicilioid")
                        .HasColumnType("int");

                    b.Property<string>("apellido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("codigoDomicilio")
                        .HasColumnType("int");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("id");

                    b.HasIndex("Domicilioid");

                    b.HasIndex(new[] { "DNI" }, "Residente_DNI_UQ")
                        .IsUnique();

                    b.ToTable("Residentes");
                });

            modelBuilder.Entity("BarrioPrivado.BD.Data.Entity.Visitante", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("DNI")
                        .HasColumnType("int");

                    b.Property<int>("ResidenteId")
                        .HasColumnType("int");

                    b.Property<string>("apellido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("id");

                    b.HasIndex("ResidenteId");

                    b.HasIndex(new[] { "DNI" }, "Visitante_DNI_UQ")
                        .IsUnique();

                    b.ToTable("Visitantes");
                });

            modelBuilder.Entity("BarrioPrivado.BD.Data.Entity.Residente", b =>
                {
                    b.HasOne("BarrioPrivado.BD.Data.Entity.Domicilio", "Domicilio")
                        .WithMany()
                        .HasForeignKey("Domicilioid")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Domicilio");
                });

            modelBuilder.Entity("BarrioPrivado.BD.Data.Entity.Visitante", b =>
                {
                    b.HasOne("BarrioPrivado.BD.Data.Entity.Residente", "Residente")
                        .WithMany("Visitantes")
                        .HasForeignKey("ResidenteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Residente");
                });

            modelBuilder.Entity("BarrioPrivado.BD.Data.Entity.Residente", b =>
                {
                    b.Navigation("Visitantes");
                });
#pragma warning restore 612, 618
        }
    }
}
